<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JavaScript Interactive Playground</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            color: #fff;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            padding: 40px 0;
        }

        h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            text-shadow: 0 0 15px rgba(255, 215, 0, 0.7);
            background: linear-gradient(45deg, #ffd700, #ffed4e);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: glow 2s infinite alternate;
        }

        @keyframes glow {
            from {
                text-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
            }
            to {
                text-shadow: 0 0 20px rgba(255, 215, 0, 0.9), 0 0 30px rgba(255, 215, 0, 0.5);
            }
        }

        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 30px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 40px;
        }

        .card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 25px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, #ffd700, #ffed4e);
        }

        .card-title {
            font-size: 1.8rem;
            margin-bottom: 15px;
            color: #ffd700;
        }

        .card-content {
            line-height: 1.6;
            margin-bottom: 20px;
        }

        .btn {
            display: inline-block;
            background: linear-gradient(45deg, #ffd700, #ffed4e);
            color: #1a2a6c;
            padding: 10px 20px;
            border-radius: 30px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
        }

        .interactive-area {
            background: rgba(0, 0, 0, 0.2);
            border-radius: 15px;
            padding: 30px;
            margin: 40px 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .interactive-title {
            font-size: 2rem;
            margin-bottom: 20px;
            color: #ffd700;
        }

        .counter {
            display: flex;
            align-items: center;
            gap: 20px;
            margin: 20px 0;
        }

        .counter-value {
            font-size: 2.5rem;
            font-weight: bold;
            min-width: 80px;
            text-align: center;
        }

        .todo-container {
            width: 100%;
            max-width: 500px;
            margin-top: 30px;
        }

        .todo-form {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .todo-input {
            flex: 1;
            padding: 12px 15px;
            border: none;
            border-radius: 30px;
            font-size: 1rem;
            background: rgba(255, 255, 255, 0.9);
        }

        .todo-list {
            list-style: none;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            overflow: hidden;
        }

        .todo-item {
            padding: 15px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: #333;
        }

        .todo-item:last-child {
            border-bottom: none;
        }

        .todo-item.completed span {
            text-decoration: line-through;
            opacity: 0.7;
        }

        .todo-actions {
            display: flex;
            gap: 10px;
        }

        .todo-actions button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            color: #1a2a6c;
        }

        .color-box {
            width: 200px;
            height: 200px;
            margin: 20px auto;
            border-radius: 10px;
            transition: all 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            color: white;
            text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
        }

        footer {
            text-align: center;
            padding: 30px 0;
            margin-top: 40px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .social-links a {
            color: #ffd700;
            font-size: 1.5rem;
            transition: transform 0.3s ease;
        }

        .social-links a:hover {
            transform: translateY(-5px);
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }
            
            .grid {
                grid-template-columns: 1fr;
            }
            
            .counter {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>JavaScript Playground</h1>
            <p class="subtitle">Explore the power of JavaScript with these interactive examples. Learn by doing!</p>
        </header>

        <div class="grid">
            <div class="card">
                <h3 class="card-title">DOM Manipulation</h3>
                <p class="card-content">Learn how JavaScript can interact with and modify the Document Object Model in real-time.</p>
                <button class="btn" onclick="changeText()">Try It</button>
            </div>

            <div class="card">
                <h3 class="card-title">Event Handling</h3>
                <p class="card-content">See how JavaScript responds to user interactions like clicks, inputs, and more.</p>
                <button class="btn" onclick="changeColor()">Change Color</button>
            </div>

            <div class="card">
                <h3 class="card-title">Async JavaScript</h3>
                <p class="card-content">Understand asynchronous operations with setTimeout, promises, and async/await.</p>
                <button class="btn" onclick="simulateAsync()">Simulate Async</button>
            </div>
        </div>

        <div class="interactive-area">
            <h2 class="interactive-title">Counter Example</h2>
            <div class="counter">
                <button class="btn" onclick="decrement()"><i class="fas fa-minus"></i></button>
                <div id="counter-value" class="counter-value">0</div>
                <button class="btn" onclick="increment()"><i class="fas fa-plus"></i></button>
            </div>
            <button class="btn" onclick="resetCounter()">Reset Counter</button>
        </div>

        <div class="interactive-area">
            <h2 class="interactive-title">Color Changer</h2>
            <div id="color-box" class="color-box" style="background-color: #1a2a6c;">
                Current Color
            </div>
            <div style="display: flex; gap: 10px; margin-top: 20px;">
                <button class="btn" onclick="changeColorTo('linear-gradient(135deg, #1a2a6c, #b21f1f)')">Red</button>
                <button class="btn" onclick="changeColorTo('linear-gradient(135deg, #1a2a6c, #1fb2a5)')">Teal</button>
                <button class="btn" onclick="changeColorTo('linear-gradient(135deg, #1a2a6c, #b21f80)')">Pink</button>
            </div>
        </div>

        <div class="interactive-area">
            <h2 class="interactive-title">Todo List</h2>
            <div class="todo-container">
                <form class="todo-form" onsubmit="addTodo(event)">
                    <input type="text" class="todo-input" id="todo-input" placeholder="Add a new task...">
                    <button type="submit" class="btn">Add</button>
                </form>
                <ul id="todo-list" class="todo-list">
                    <!-- Todo items will be added here -->
                </ul>
            </div>
        </div>

        <footer>
            <p>Created with vanilla JavaScript - No frameworks or libraries</p>
            <div class="social-links">
                <a href="#"><i class="fab fa-js"></i></a>
                <a href="#"><i class="fab fa-github"></i></a>
                <a href="#"><i class="fab fa-codepen"></i></a>
                <a href="#"><i class="fab fa-free-code-camp"></i></a>
            </div>
        </footer>
    </div>

    <script>
        // Counter functionality
        let count = 0;
        const counterElement = document.getElementById('counter-value');
        
        function increment() {
            count++;
            updateCounter();
        }
        
        function decrement() {
            count--;
            updateCounter();
        }
        
        function resetCounter() {
            count = 0;
            updateCounter();
        }
        
        function updateCounter() {
            counterElement.textContent = count;
            counterElement.style.transform = 'scale(1.1)';
            setTimeout(() => {
                counterElement.style.transform = 'scale(1)';
            }, 100);
        }
        
        // Color changer functionality
        function changeColorTo(color) {
            const colorBox = document.getElementById('color-box');
            colorBox.style.background = color;
        }
        
        // DOM manipulation example
        function changeText() {
            const cards = document.querySelectorAll('.card-title');
            cards[0].textContent = "Text Changed!";
            setTimeout(() => {
                cards[0].textContent = "DOM Manipulation";
            }, 1500);
        }
        
        // Event handling example
        function changeColor() {
            const cards = document.querySelectorAll('.card');
            const randomColor = `linear-gradient(135deg, #${Math.floor(Math.random()*16777215).toString(16)}, #${Math.floor(Math.random()*16777215).toString(16)})`;
            cards[1].style.background = randomColor;
            
            setTimeout(() => {
                cards[1].style.background = 'rgba(255, 255, 255, 0.1)';
            }, 1500);
        }
        
        // Async simulation
        function simulateAsync() {
            const btn = document.querySelectorAll('.btn')[2];
            btn.textContent = "Loading...";
            btn.disabled = true;
            
            setTimeout(() => {
                btn.textContent = "Done!";
                setTimeout(() => {
                    btn.textContent = "Simulate Async";
                    btn.disabled = false;
                }, 1000);
            }, 2000);
        }
        
        // Todo list functionality
        let todos = [];
        
        function addTodo(event) {
            event.preventDefault();
            const input = document.getElementById('todo-input');
            const text = input.value.trim();
            
            if (text) {
                todos.push({ id: Date.now(), text, completed: false });
                input.value = '';
                renderTodos();
            }
        }
        
        function toggleTodo(id) {
            const todo = todos.find(todo => todo.id === id);
            if (todo) {
                todo.completed = !todo.completed;
                renderTodos();
            }
        }
        
        function deleteTodo(id) {
            todos = todos.filter(todo => todo.id !== id);
            renderTodos();
        }
        
        function renderTodos() {
            const todoList = document.getElementById('todo-list');
            todoList.innerHTML = '';
            
            todos.forEach(todo => {
                const li = document.createElement('li');
                li.className = `todo-item ${todo.completed ? 'completed' : ''}`;
                
                const span = document.createElement('span');
                span.textContent = todo.text;
                
                const actions = document.createElement('div');
                actions.className = 'todo-actions';
                
                const toggleBtn = document.createElement('button');
                toggleBtn.innerHTML = todo.completed ? '<i class="fas fa-undo"></i>' : '<i class="fas fa-check"></i>';
                toggleBtn.onclick = () => toggleTodo(todo.id);
                
                const deleteBtn = document.createElement('button');
                deleteBtn.innerHTML = '<i class="fas fa-trash"></i>';
                deleteBtn.onclick = () => deleteTodo(todo.id);
                
                actions.appendChild(toggleBtn);
                actions.appendChild(deleteBtn);
                
                li.appendChild(span);
                li.appendChild(actions);
                
                todoList.appendChild(li);
            });
        }
        
        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            // Add some sample todos
            todos = [
                { id: 1, text: "Learn JavaScript basics", completed: true },
                { id: 2, text: "Practice DOM manipulation", completed: false },
                { id: 3, text: "Build a JavaScript project", completed: false }
            ];
            renderTodos();
        });
    </script>
</body>
</html>
